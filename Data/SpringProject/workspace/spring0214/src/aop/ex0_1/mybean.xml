<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

<context:annotation-config/>
   <!-- target 빈 만들기 -->
   <bean id="target" class="aop.ex0_1.MyBeanImple"/>
   
   <!-- Advice 빈 만들기 -->
   <bean id="loggerBeforeAdvice" class="aop.ex0_1.MyBeanBeforeAdvice"/>
   <bean id="loggerAfterAdvice" class="aop.ex0_1.MyAfterAdvice"/>
   
   <!-- execution(리턴타입 패키지경로 클래스명 메서드명(매개변수)) *kr.or.kosta.mvc..*Imple.*(..)
   		()->인자가 하나도 없는 메서드만 지칭
   		(..) -> 인자가없거나 하나이상인 매서드=>모든매서드 -->
   <bean id ="loggerPointCut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
      <property name="expression" value="execution(* myGet*(..))"></property>
   </bean>
   
   <bean id="loggerAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
      <property name="advice" ref="loggerBeforeAdvice"/>
      <property name="pointcut" ref="loggerPointCut"/>
   </bean>
   
   <bean id="loggerAfterAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
      <property name="advice" ref="loggerAfterAdvice"/>
      <property name="pointcut" ref="loggerPointCut"/>
   </bean>
   
   <bean id="pfBean" class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="target" ref="target"/>
      <property name="interceptorNames">
         <list>
            <value>loggerAdvisor</value>
            <value>loggerAfterAdvisor</value>
         </list>
      </property>
   </bean>
</beans>
